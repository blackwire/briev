'use strict';

exports.view = function(view, data)
{
    view = view || 'index';
    let path = 'view/' + view;

    const _ = require('lodash'),
          filesys = require('fs'),
          src = __dirname + '/../../src/';

    let file = src + path + '.jsml';

    // set template engine to use :| and |: as beginning and ending markers for evlauation and handlebars for value injection
    _.templateSettings = {
        evaluate: /:\|([\s\S]+?)\|:/g,
        interpolate: /{{([\s\S]+?)}}/g,
        escape: /{{-([\s\S]+?)}}/g
    };

    let fileContents = filesys.readFileSync(file, 'utf8'),
        template = _.template(fileContents);

    data = data || {};

    // attach the lodash element for use inside the templates
    data._ = _;

    // attach path for use inside the jsml files
    data.path = path.replace(/\/.*$/, '');

    // attach include function for use inside the templates
    data.include = function(file, additionalData)
    {
        let path = src + 'inc/' + file + '.html',
            options = _.extend({}, data, additionalData);

        file = filesys.readFileSync(path, 'utf8');
        return _.template(file)(options);
    };

    // inject stored data into the template
    return template(data);
}